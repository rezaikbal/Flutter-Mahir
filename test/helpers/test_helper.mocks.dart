// Mocks generated by Mockito 5.4.4 from annotations
// in movie_app/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i26;
import 'dart:typed_data' as _i27;

import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;
import 'package:movie_app/common/failure.dart' as _i8;
import 'package:movie_app/common/network.dart' as _i25;
import 'package:movie_app/data/datasource/helper/movie_database_helper.dart'
    as _i24;
import 'package:movie_app/data/datasource/helper/tv_database_helper.dart'
    as _i22;
import 'package:movie_app/data/datasource/local/movie/local_data_source_movie.dart'
    as _i20;
import 'package:movie_app/data/datasource/local/tv/local_data_source_tv.dart'
    as _i17;
import 'package:movie_app/data/datasource/remote/remote_data_source.dart'
    as _i14;
import 'package:movie_app/data/models/movie/movie_detail_model.dart' as _i3;
import 'package:movie_app/data/models/movie/movie_model.dart' as _i15;
import 'package:movie_app/data/models/movie/movie_table.dart' as _i21;
import 'package:movie_app/data/models/tv/tv_detail_model.dart' as _i4;
import 'package:movie_app/data/models/tv/tv_model.dart' as _i16;
import 'package:movie_app/data/models/tv/tv_table.dart' as _i18;
import 'package:movie_app/domain/entitites/movie/movie.dart' as _i9;
import 'package:movie_app/domain/entitites/movie/movie_detail.dart' as _i10;
import 'package:movie_app/domain/entitites/tv/tv.dart' as _i13;
import 'package:movie_app/domain/entitites/tv/tv_detail.dart' as _i12;
import 'package:movie_app/domain/repository/movie_repository.dart' as _i6;
import 'package:movie_app/domain/repository/tv_repository.dart' as _i11;
import 'package:sqflite/sqflite.dart' as _i23;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailModel_1 extends _i1.SmartFake
    implements _i3.MovieDetailModel {
  _FakeMovieDetailModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvDetailModel_2 extends _i1.SmartFake implements _i4.TvDetailModel {
  _FakeTvDetailModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i5.StreamedResponse {
  _FakeStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i6.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getNowPlaying() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlaying,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
          this,
          Invocation.method(
            #getNowPlaying,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i10.MovieDetail>> getDetailMovie(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailMovie,
          [id],
        ),
        returnValue:
            _i7.Future<_i2.Either<_i8.Failure, _i10.MovieDetail>>.value(
                _FakeEither_0<_i8.Failure, _i10.MovieDetail>(
          this,
          Invocation.method(
            #getDetailMovie,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i10.MovieDetail>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
          this,
          Invocation.method(
            #getMovieRecommendations,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
          this,
          Invocation.method(
            #getPopularMovies,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
          this,
          Invocation.method(
            #getTopRatedMovies,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
          this,
          Invocation.method(
            #searchMovies,
            [query],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlist(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlist,
            [movie],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlist(
          _i10.MovieDetail? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);

  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>.value(
            _FakeEither_0<_i8.Failure, List<_i9.Movie>>(
          this,
          Invocation.method(
            #getWatchlistMovies,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i9.Movie>>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i11.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i8.Failure, _i12.TvDetail>> getDetailTv(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailTv,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, _i12.TvDetail>>.value(
            _FakeEither_0<_i8.Failure, _i12.TvDetail>(
          this,
          Invocation.method(
            #getDetailTv,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, _i12.TvDetail>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>> getTvAiringToday() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvAiringToday,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i13.Tv>>(
          this,
          Invocation.method(
            #getTvAiringToday,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>> getTvOnTheAir() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvOnTheAir,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i13.Tv>>(
          this,
          Invocation.method(
            #getTvOnTheAir,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>> getTvTopRated() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvTopRated,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i13.Tv>>(
          this,
          Invocation.method(
            #getTvTopRated,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>> getTvPopular() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvPopular,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i13.Tv>>(
          this,
          Invocation.method(
            #getTvPopular,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>> searchTv(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i13.Tv>>(
          this,
          Invocation.method(
            #searchTv,
            [query],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>> getRecommendationsTv(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendationsTv,
          [id],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i13.Tv>>(
          this,
          Invocation.method(
            #getRecommendationsTv,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> saveWatchlistTv(
          _i12.TvDetail? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlistTv,
          [tvDetail],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlistTv,
            [tvDetail],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, String>> removeWatchlistTv(
          _i12.TvDetail? tvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTv,
          [tvDetail],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, String>>.value(
            _FakeEither_0<_i8.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlistTv,
            [tvDetail],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, String>>);

  @override
  _i7.Future<bool> isAddedToWatchlistTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlistTv,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>> getWatchlistTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue: _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>.value(
            _FakeEither_0<_i8.Failure, List<_i13.Tv>>(
          this,
          Invocation.method(
            #getWatchlistTv,
            [],
          ),
        )),
      ) as _i7.Future<_i2.Either<_i8.Failure, List<_i13.Tv>>>);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i14.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i15.MovieModel>> getNowPlaying() => (super.noSuchMethod(
        Invocation.method(
          #getNowPlaying,
          [],
        ),
        returnValue:
            _i7.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i7.Future<List<_i15.MovieModel>>);

  @override
  _i7.Future<List<_i15.MovieModel>> getPopularMovies() => (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue:
            _i7.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i7.Future<List<_i15.MovieModel>>);

  @override
  _i7.Future<List<_i15.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue:
            _i7.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i7.Future<List<_i15.MovieModel>>);

  @override
  _i7.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue:
            _i7.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i7.Future<List<_i15.MovieModel>>);

  @override
  _i7.Future<List<_i16.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue: _i7.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]),
      ) as _i7.Future<List<_i16.TvModel>>);

  @override
  _i7.Future<List<_i15.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue:
            _i7.Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]),
      ) as _i7.Future<List<_i15.MovieModel>>);

  @override
  _i7.Future<List<_i16.TvModel>> searchTv(String? query) => (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue: _i7.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]),
      ) as _i7.Future<List<_i16.TvModel>>);

  @override
  _i7.Future<_i3.MovieDetailModel> getDetailMovie(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailMovie,
          [id],
        ),
        returnValue:
            _i7.Future<_i3.MovieDetailModel>.value(_FakeMovieDetailModel_1(
          this,
          Invocation.method(
            #getDetailMovie,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.MovieDetailModel>);

  @override
  _i7.Future<_i4.TvDetailModel> getDetailTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getDetailTv,
          [id],
        ),
        returnValue: _i7.Future<_i4.TvDetailModel>.value(_FakeTvDetailModel_2(
          this,
          Invocation.method(
            #getDetailTv,
            [id],
          ),
        )),
      ) as _i7.Future<_i4.TvDetailModel>);

  @override
  _i7.Future<List<_i16.TvModel>> getTvAiringToday() => (super.noSuchMethod(
        Invocation.method(
          #getTvAiringToday,
          [],
        ),
        returnValue: _i7.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]),
      ) as _i7.Future<List<_i16.TvModel>>);

  @override
  _i7.Future<List<_i16.TvModel>> getTvOnTheAir() => (super.noSuchMethod(
        Invocation.method(
          #getTvOnTheAir,
          [],
        ),
        returnValue: _i7.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]),
      ) as _i7.Future<List<_i16.TvModel>>);

  @override
  _i7.Future<List<_i16.TvModel>> getTvTopRated() => (super.noSuchMethod(
        Invocation.method(
          #getTvTopRated,
          [],
        ),
        returnValue: _i7.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]),
      ) as _i7.Future<List<_i16.TvModel>>);

  @override
  _i7.Future<List<_i16.TvModel>> getTvPopular() => (super.noSuchMethod(
        Invocation.method(
          #getTvPopular,
          [],
        ),
        returnValue: _i7.Future<List<_i16.TvModel>>.value(<_i16.TvModel>[]),
      ) as _i7.Future<List<_i16.TvModel>>);
}

/// A class which mocks [LocalDataSourceTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSourceTv extends _i1.Mock implements _i17.LocalDataSourceTv {
  MockLocalDataSourceTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlistTv(_i18.TvTable? tvTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tvTable],
        ),
        returnValue: _i7.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlistTv,
            [tvTable],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> removeWatchlistTv(_i18.TvTable? tvTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTv,
          [tvTable],
        ),
        returnValue: _i7.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlistTv,
            [tvTable],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i18.TvTable?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i7.Future<_i18.TvTable?>.value(),
      ) as _i7.Future<_i18.TvTable?>);

  @override
  _i7.Future<List<_i18.TvTable>> getWatchlistTv() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue: _i7.Future<List<_i18.TvTable>>.value(<_i18.TvTable>[]),
      ) as _i7.Future<List<_i18.TvTable>>);
}

/// A class which mocks [LocalDataSourceMovie].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSourceMovie extends _i1.Mock
    implements _i20.LocalDataSourceMovie {
  MockLocalDataSourceMovie() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlist,
            [movie],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> removeWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlist,
            [movie],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i21.MovieTable?> getMovieById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i7.Future<_i21.MovieTable?>.value(),
      ) as _i7.Future<_i21.MovieTable?>);

  @override
  _i7.Future<List<_i21.MovieTable>> getWatchlistMovies() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue:
            _i7.Future<List<_i21.MovieTable>>.value(<_i21.MovieTable>[]),
      ) as _i7.Future<List<_i21.MovieTable>>);

  @override
  _i7.Future<void> cacheNowPlayingMovies(List<_i21.MovieTable>? movies) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheNowPlayingMovies,
          [movies],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i21.MovieTable>> getCacheNowPlaying() => (super.noSuchMethod(
        Invocation.method(
          #getCacheNowPlaying,
          [],
        ),
        returnValue:
            _i7.Future<List<_i21.MovieTable>>.value(<_i21.MovieTable>[]),
      ) as _i7.Future<List<_i21.MovieTable>>);
}

/// A class which mocks [TvDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDatabaseHelper extends _i1.Mock implements _i22.TvDatabaseHelper {
  MockTvDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i23.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i7.Future<_i23.Database?>.value(),
      ) as _i7.Future<_i23.Database?>);

  @override
  _i7.Future<void> insertCacheTransaction(
    List<_i18.TvTable>? tvTable,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCacheTransaction,
          [
            tvTable,
            category,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getCacheTv(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCacheTv,
          [category],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  _i7.Future<int> clearCache(String? category) => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [category],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> insertWatchlistTv(_i18.TvTable? tvTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistTv,
          [tvTable],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> removeWatchList(_i18.TvTable? tvTable) => (super.noSuchMethod(
        Invocation.method(
          #removeWatchList,
          [tvTable],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<Map<String, dynamic>?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTvById,
          [id],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [MovieDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDatabaseHelper extends _i1.Mock
    implements _i24.MovieDatabaseHelper {
  MockMovieDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i23.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i7.Future<_i23.Database?>.value(),
      ) as _i7.Future<_i23.Database?>);

  @override
  _i7.Future<void> insertCacheTransaction(
    List<_i21.MovieTable>? movies,
    String? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCacheTransaction,
          [
            movies,
            category,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getCacheMovies(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCacheMovies,
          [category],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  _i7.Future<int> clearCache(String? category) => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [category],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> insertWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> removeWatchlist(_i21.MovieTable? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [movie],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [id],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistMovies,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Network].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetwork extends _i1.Mock implements _i25.Network {
  MockNetwork() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i26.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);

  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(_i19.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<_i27.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i27.Uint8List>.value(_i27.Uint8List(0)),
      ) as _i7.Future<_i27.Uint8List>);

  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i5.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i5.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
